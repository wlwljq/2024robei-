module lcd_driver(
	lcd_pclk,
	rst_n,
	pixel_data,
	pixel_xpos,
	pixel_ypos,
	lcd_de,
	lcd_hs,
	lcd_vs,
	lcd_bl,
	lcd_clk,
	lcd_rst,
	lcd_rgb);

	//---Ports declearation: generated by Robei---
	input lcd_pclk;
	input rst_n;
	input [23:0] pixel_data;
	output [10:0] pixel_xpos;
	output [10:0] pixel_ypos;
	output lcd_de;
	output lcd_hs;
	output lcd_vs;
	output lcd_bl;
	output lcd_clk;
	output lcd_rst;
	output [23:0] lcd_rgb;

	wire lcd_pclk;
	wire rst_n;
	wire [23:0] pixel_data;
	wire [10:0] pixel_xpos;
	wire [10:0] pixel_ypos;
	wire lcd_de;
	wire lcd_hs;
	wire lcd_vs;
	wire lcd_bl;
	wire lcd_clk;
	wire lcd_rst;
	wire [23:0] lcd_rgb;

	//----Code starts here: integrated by Robei-----
	reg  [10:0] h_cnt  ;
	reg  [10:0] v_cnt  ;
	
	//wire define    
	wire        lcd_en;
	wire        data_req;
	
	// 4.3' 800*480   
	parameter  h_sync   =  11'd128;    //行同步
	parameter  h_back   =  11'd88;     //行显示后沿
	parameter  h_disp   =  11'd800;    //行有效数据
	parameter  h_total  =  11'd1056;   //行扫描周期
	   
	parameter  v_sync   =  11'd2;      //场同步
	parameter  v_back   =  11'd33;     //场显示后沿
	parameter  v_disp   =  11'd480;    //场有效数据
	parameter  v_total  =  11'd525;    //场扫描周期    
	
	//RGB LCD 采用DE模式时，行场同步信号需要拉高
	assign  lcd_hs = 1'b1;        //LCD行同步信号
	assign  lcd_vs = 1'b1;        //LCD场同步信号
	
	assign  lcd_bl = 1'b1;        //LCD背光控制信号  
	assign  lcd_clk = lcd_pclk;   //LCD像素时钟
	assign  lcd_rst= 1'b1;        //LCD复位
	assign  lcd_de = lcd_en;      //LCD数据有效信号
	
	//使能RGB888数据输出
	assign  lcd_en = ((h_cnt >= h_sync + h_back) && (h_cnt < h_sync + h_back + h_disp)
	                  && (v_cnt >= v_sync + v_back) && (v_cnt < v_sync + v_back + v_disp)) 
	                  ? 1'b1 : 1'b0;
	
	//请求像素点颜色数据输入  
	assign data_req = ((h_cnt >= h_sync + h_back - 1'b1) && (h_cnt < h_sync + h_back + h_disp - 1'b1)
	                  && (v_cnt >= v_sync + v_back) && (v_cnt < v_sync + v_back + v_disp)) 
	                  ? 1'b1 : 1'b0;
	
	//像素点坐标  
	assign pixel_xpos = data_req ? (h_cnt - (h_sync + h_back - 1'b1)) : 11'd0;
	assign pixel_ypos = data_req ? (v_cnt - (v_sync + v_back - 1'b1)) : 11'd0;
	
	//RGB888数据输出
	assign lcd_rgb = lcd_en ? pixel_data : 24'd0;
	
	//行计数器对像素时钟计数
	always@ (posedge lcd_pclk or negedge rst_n) begin
	    if(!rst_n) 
	        h_cnt <= 11'd0;
	    else begin
	        if(h_cnt == h_total - 1'b1)
	            h_cnt <= 11'd0;
	        else
	            h_cnt <= h_cnt + 1'b1;           
	    end
	end
	
	//场计数器对行计数
	always@ (posedge lcd_pclk or negedge rst_n) begin
	    if(!rst_n) 
	        v_cnt <= 11'd0;
	    else begin
	        if(h_cnt == h_total - 1'b1) begin
	            if(v_cnt == v_total - 1'b1)
	                v_cnt <= 11'd0;
	            else
	                v_cnt <= v_cnt + 1'b1;    
	        end
	    end    
	end
	
	
	
endmodule    //lcd_driver

