module motor_contr(
	sys_clk,
	sys_rst_n,
	encoder_A,
	encoder_B,
	speed_set,
	Kp,
	Ki,
	speed,
	motorout_1,
	motorout_2);

	//---Ports declearation: generated by Robei---
	input sys_clk;
	input sys_rst_n;
	input encoder_A;
	input encoder_B;
	input [15:0] speed_set;
	input [15:0] Kp;
	input [15:0] Ki;
	output [15:0] speed;
	output motorout_1;
	output motorout_2;

	wire sys_clk;
	wire sys_rst_n;
	wire encoder_A;
	wire encoder_B;
	wire [15:0] speed_set;
	wire [15:0] Kp;
	wire [15:0] Ki;
	wire [15:0] speed;
	wire motorout_1;
	wire motorout_2;
	wire [15:0] pid_controller3_control_out;
	wire [15:0] encoder1_speed_out;
	assign speed = encoder1_speed_out;

	//----Code starts here: integrated by Robei-----
	
	
	
	
	//---Module instantiation---
	encoder encoder1(
		.sys_clk(sys_clk),
		.sys_rst_n(sys_rst_n),
		.A(encoder_A),
		.B(encoder_B),
		.speed_out(encoder1_speed_out));

	motor_controller motor_controller2(
		.sys_clk(sys_clk),
		.sys_rst_n(sys_rst_n),
		.control_n(pid_controller3_control_out),
		.motorout_1(motorout_1),
		.motorout_2(motorout_2));

	pid_controller pid_controller3(
		.sys_clk(sys_clk),
		.sys_rst_n(sys_rst_n),
		.setpoint_n(speed_set),
		.feedback_n(encoder1_speed_out),
		.Kp(Kp),
		.Ki(Ki),
		.Kd(16'b0),
		.control_out(pid_controller3_control_out));

endmodule    //motor_contr

