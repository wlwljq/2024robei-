module lcd_rgb_char(
	sys_clk,
	sys_rst_n,
	lcd_hs,
	lcd_vs,
	lcd_de,
	lcd_rgb,
	lcd_bl,
	lcd_rst,
	lcd_clk,
	dht11);

	//---Ports declearation: generated by Robei---
	input sys_clk;
	input sys_rst_n;
	output lcd_hs;
	output lcd_vs;
	output lcd_de;
	output [23:0] lcd_rgb;
	output lcd_bl;
	output lcd_rst;
	output lcd_clk;
	inout dht11;

	wire sys_clk;
	wire sys_rst_n;
	wire lcd_hs;
	wire lcd_vs;
	wire lcd_de;
	wire [23:0] lcd_rgb;
	wire lcd_bl;
	wire lcd_rst;
	wire lcd_clk;
	wire dht11;

	//----Code starts here: integrated by Robei-----
	
	//wire define    
	wire          lcd_pclk  ;    //LCD像素时钟
	              
	wire  [10:0]  pixel_xpos;    //当前像素点横坐标
	wire  [10:0]  pixel_ypos;    //当前像素点纵坐标
	wire  [10:0]  h_disp    ;    //LCD屏水平分辨率
	wire  [10:0]  v_disp    ;    //LCD屏垂直分辨率
	wire  [23:0]  pixel_data;    //像素数据
	wire  [23:0]  lcd_rgb_o ;    //输出的像素数据
	wire  [23:0]  lcd_rgb_i ;    //输入的像素数据
	
	wire [39:0]  data_temp;
	wire [7:0]   data1;
	wire [7:0]   data2;
	
	//像素数据方向切换
	assign lcd_rgb = lcd_de ?  lcd_rgb_o :  {24{1'bz}};
	assign lcd_rgb_i = lcd_rgb;
	
	assign data1 = data_temp[23:16];
	assign data2 = data_temp[39:32];
	
	
	//---Module instantiation---
	lcd_display lcd_display1(
		.lcd_pclk(sys_clk),
		.rst_n(sys_rst_n),
		.data1(data1),
		.data2(data2),
		.pixel_xpos(pixel_xpos),
		.pixel_ypos(pixel_ypos),
		.pixel_data(pixel_data));

	lcd_driver lcd_driver2(
		.lcd_pclk(sys_clk),
		.rst_n(sys_rst_n),
		.pixel_data(pixel_data),
		.pixel_xpos(pixel_xpos),
		.pixel_ypos(pixel_ypos),
		.lcd_de(lcd_de),
		.lcd_hs(lcd_hs),
		.lcd_vs(lcd_vs),
		.lcd_bl(lcd_bl),
		.lcd_clk(lcd_clk),
		.lcd_rst(lcd_rst),
		.lcd_rgb(lcd_rgb_o));

	dht11_drive dht11_drive3(
		.sys_clk(sys_clk),
		.rst_n(sys_rst_n),
		.dht11(dht11),
		.data_temp(data_temp));

endmodule    //lcd_rgb_char

